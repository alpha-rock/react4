{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "Scatter plot with interactive legend and x-axis.",
  "width": 500,
  "height": 500,
  "padding": 5,
  "autosize": "pad",
  "signals": [
    {
      "name": "clear",
      "value": true,
      "on": [
        {
          "events": "mouseup[!event.item]",
          "update": "true",
          "force": true
        }
      ]
    },
    {
      "name": "shift",
      "value": false,
      "on": [
        {
          "events": "@legendSymbol:click, @legendLabel:click",
          "update": "event.shiftKey",
          "force": true
        }
      ]
    },
    {
      "name": "clicked",
      "value": null,
      "on": [
        {
          "events": "@legendSymbol:click, @legendLabel:click",
          "update": "{value: datum.value}",
          "force": true
        }
      ]
    },
    {
      "name": "brush",
      "value": 0,
      "on": [
        {
          "events": {
            "signal": "clear"
          },
          "update": "clear ? [0, 0] : brush"
        },
        {
          "events": "@xaxis:mousedown",
          "update": "[x(), x()]"
        },
        {
          "events": "[@xaxis:mousedown, window:mouseup] > window:mousemove!",
          "update": "[brush[0], clamp(x(), 0, width)]"
        },
        {
          "events": {
            "signal": "delta"
          },
          "update": "clampRange([anchor[0] + delta, anchor[1] + delta], 0, width)"
        }
      ]
    },
    {
      "name": "anchor",
      "value": null,
      "on": [
        {
          "events": "@brush:mousedown",
          "update": "slice(brush)"
        }
      ]
    },
    {
      "name": "xdown",
      "value": 0,
      "on": [
        {
          "events": "@brush:mousedown",
          "update": "x()"
        }
      ]
    },
    {
      "name": "delta",
      "value": 0,
      "on": [
        {
          "events": "[@brush:mousedown, window:mouseup] > window:mousemove!",
          "update": "x() - xdown"
        }
      ]
    },
    {
      "name": "domain",
      "on": [
        {
          "events": {
            "signal": "brush"
          },
          "update": "span(brush) ? invert('x', brush) : null"
        }
      ]
    }
  ],
  "data": [
    {
      "name": "source",
      "url": "https://raw.githubusercontent.com/alpha-rock/DataHosting/master/suicide-death-rates2.json",
      "transform": [
        {
          "type": "formula",
          "expr": "datum.Code +' ' + datum.Value",
          "as": "tooltip"
        }
      ]
    },
    {
      "name": "valid",
      "source": "source",
      "transform": [
        {
          "type": "filter",
          "expr": "datum['Year'] != null && datum['Value'] != null && datum['Code'] != null "
        }
      ]
    },
    {
      "name": "selected",
      "on": [
        {
          "trigger": "clear",
          "remove": true
        },
        {
          "trigger": "!shift",
          "remove": true
        },
        {
          "trigger": "!shift && clicked",
          "insert": "clicked"
        },
        {
          "trigger": "shift && clicked",
          "toggle": "clicked"
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "linear",
      "range": "width",
      "zero": false,
      "domain": {
        "data": "source",
        "field": "Year"
      }
    },
    {
      "name": "y",
      "type": "linear",
      "range": "height",
      "nice": true,
      "zero": true,
      "domain": {
        "data": "source",
        "field": "Value"
      }
    },
    {
      "name": "color",
      "type": "ordinal",
      "range": {
        "scheme": "category10"
      },
      "domain": {
        "data": "source",
        "field": "Code"
      }
    }
  ],
  "axes": [
    {
      "scale": "x",
      "grid": true,
      "domain": false,
      "orient": "bottom",
      "tickCount": 5,
      "title": "Year"
    },
    {
      "scale": "y",
      "grid": true,
      "domain": false,
      "orient": "left",
      "titlePadding": 5,
      "title": "Suicides per 100000 Deaths"
    }
  ],
  "legends": [
    {
      "stroke": "color",
      "title": "Origin",
      "encode": {
        "symbols": {
          "name": "legendSymbol",
          "interactive": true,
          "update": {
            "fill": {
              "value": "transparent"
            },
            "strokeWidth": {
              "value": 2
            },
            "opacity": [
              {
                "test": "!length(data('selected')) || indata('selected', 'value', datum.value)",
                "value": 0.7
              },
              {
                "value": 0.15
              }
            ],
            "size": {
              "value": 64
            }
          }
        },
        "labels": {
          "name": "legendLabel",
          "interactive": true,
          "update": {
            "opacity": [
              {
                "test": "!length(data('selected')) || indata('selected', 'value', datum.value)",
                "value": 1
              },
              {
                "value": 0.25
              }
            ]
          }
        }
      }
    }
  ],
  "marks": [
    {
      "type": "group",
      "from": {
        "facet": {
          "name": "series",
          "data": "source",
          "groupby": "Code"
        }
      },
      "marks": [
        {
          "type": "line",
          "from": {
            "data": "series"
          },
          "encode": {
            "enter": {
              "x": {
                "scale": "x",
                "field": "Year"
              },
              "y": {
                "scale": "y",
                "field": "Value"
              },
              "stroke": {
                "scale": "color",
                "field": "Code"
              },
              "strokeWidth": {
                "value": 2
              }
            },
            "update": {
              "opacity": [
                {
                  "test": "(!domain || inrange(datum.Year, domain)) && (!length(data('selected')) || indata('selected', 'value', datum.Code))",
                  "value": 0.7
                },
                {
                  "value": 0.15
                }
              ],
              "stroke": [
                {
                  "test": "(!domain || inrange(datum.Horsepower, domain)) && (!length(data('selected')) || indata('selected', 'value', datum.Code))",
                  "scale": "color",
                  "field": "Code"
                },
                {
                  "value": "#ccc"
                }
              ],
              "fillOpacity": {
                "value": 1
              }
            },
            "hover": {
              "fillOpacity": {
                "value": 0.5
              }
            }
          }
        }
      ]
    },
    {
      "name": "marks",
      "type": "symbol",
      "from": {
        "data": "source"
      },
      "encode": {
        "enter": {
          "size": {
            "value": 50
          },
          "tooltip": {
            "field": "tooltip"
          }
        },
        "update": {
          "x": {
            "scale": "x",
            "field": "Year"
          },
          "y": {
            "scale": "y",
            "field": "Value"
          },
          "shape": {
            "value": "circle"
          },
          "strokeWidth": {
            "value": 2
          },
          "opacity": [
            {
              "test": "(!domain || inrange(datum.Year, domain)) && (!length(data('selected')) || indata('selected', 'value', datum.Code))",
              "value": 0.7
            },
            {
              "value": 0.15
            }
          ],
          "stroke": [
            {
              "test": "(!domain || inrange(datum.Horsepower, domain)) && (!length(data('selected')) || indata('selected', 'value', datum.Code))",
              "scale": "color",
              "field": "Code"
            },
            {
              "value": "#ccc"
            }
          ],
          "fill": {
            "value": "transparent"
          }
        }
      }
    }
  ],
  "config": {}
}